CLI 实现说明
=============

本文档旨在解释 Kea 的命令行界面（CLI）是如何实现的，包括如何处理命令行参数、YAML 配置文件以及参数清洗。

命令行参数解析
----------------

Kea 使用 `argparse` 库来解析命令行参数。以下是主要的命令行参数：

- ``-f`` 或 ``--property_files``: 指定要测试的应用属性文件。
- ``-d`` 或 ``--device_serial``: 指定目标设备的序列号。
- ``-a`` 或 ``--apk``: 指定目标 APK 文件的路径。
- ``-o`` 或 ``--output``: 指定输出目录，默认为 "output"。
- ``-p`` 或 ``--policy``: 指定输入事件生成策略，默认为 "random"。
- ``-t`` 或 ``--timeout``: 指定超时时间（秒），默认为预设值。
- ``-debug``: 开启调试模式，输出调试信息。
- ``-keep_app``: 测试后保留设备上的应用。
- ``-grant_perm``: 安装时授予所有权限，对 Android 6.0+ 有用。
- ``-is_emulator``: 声明目标设备为模拟器。
- ``-is_harmonyos``: 使用 HarmonyOS 设备。
- ``-load_config``: 从 ``config.yml`` 加载参数，命令行参数将被忽略。

YAML 配置文件
--------------

Kea 支持通过 YAML 配置文件（``config.yml``）来指定参数，以简化参数的配置过程。YAML 文件中的参数值将覆盖命令行参数。

.. 
 参数清洗
 ----------
 参数清洗是通过 `sanitize_args` 函数实现的，该函数确保参数的有效性和一致性。


参数对象
----------

Kea 使用 `dataclass` 定义了一个名为 `Setting` 的参数对象，用于存储和传递参数。这个对象包含了所有与测试相关的配置。

启动 Kea
----------

以下是 Kea 启动流程的简要说明：

1. 解析命令行参数和 YAML 配置文件。
2. 设置参数对象 `Setting`。
3. 根据目标平台加载相应的 PDL（属性描述语言）驱动。
4. 创建 Kea 实例并加载应用属性。
5. 启动 Kea 进行测试。

主要函数功能介绍
--------------------

以下是 Kea CLI 中每个主要函数的功能介绍：

- `parse_args` 函数：
    - 负责解析命令行输入的参数。
    - 根据用户输入设置相应的命令行参数，并处理 `-load_config` 选项以决定是否从 YAML 配置文件中加载参数。

- `load_yaml_args` 函数：
    - 负责从 `config.yml` YAML 配置文件中读取参数。
    - 将配置文件中的参数值应用到参数对象中，覆盖命令行输入的参数。

- `sanitize_args` 函数：
    - 对解析后的参数进行清洗和验证。
    - 确保所有参数在传递给 Kea 之前都是有效和一致的。

- `Setting` 数据类：
    - 定义了 Kea 运行所需的配置参数的数据结构。
    - 存储和管理如 APK 路径、设备序列号、输出目录等参数。

- `load_pdl_driver` 函数：
    - 根据目标平台（Android 或 HarmonyOS）加载相应的 PDL 驱动。
    - 确保 Kea 能够与目标设备的操作系统交互。

- `start_kea` 函数：
    - 初始化 DroidBot 实例，并设置 Kea 的 PDL 驱动。
    - 创建 Kea 实例，加载应用属性，并开始执行测试。

- `main` 函数：
    - 作为程序的入口点，串联起整个 Kea 启动流程。
    - 调用其他函数完成参数解析、配置加载、PDL 驱动加载和 Kea 启动。
